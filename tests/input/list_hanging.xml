<t>Lists with 'hanging labels': the list item is indented the amount of
the hangIndent: 
  <list hangIndent="8" style="hanging">
    <t hangText="Item A:">Here is an example of a setence that
    follows the "hangText" in a list item in a hanging list.</t>

    <t hangText="Item B with a much longer label:">Here is an
    example if the text
    following the "hangText" is long and
    wraps, the indent (set to 8 in the XML) is used.
    </t>

    <t hangText="Item C:"><vspace blankLines="0"/> Here's an
    example where a
    vspace element has been inserted so the text starts on a new
    line (instead of next to the "hangText".<vspace blankLines="1"/>
    And something which should look like a new paragraph for the same
    hangindent item.</t>

    <t hangText="Item D with a very longer label followed by &lt;vspace/&gt;:"><vspace/>Here is an
    example if the text
    following the "hangText" is long and
    wraps, the indent (set to 8 in the XML) is used.
    </t>
  </list>
  <list style="hanging">
    <t hangText="RFC 4662, A Session Initiation Protocol (SIP) Event Notification Extension for Resource Lists (S):"> <xref
    target="RFC4662">RFC 4662</xref> defines an
    extension to RFC 6665 that allows a client to subscribe to a list of
    resources using a single subscription. The server, called a Resource
    List Server (RLS) will "expand" the subscription and subscribe to each
    individual member of the list. Its primary usage with presence is to
    allow subscriptions to "buddy lists". Without RFC 4662, a UA would
    need to subscribe to each presentity individually. With RFC 4662, they
    can have a single subscription to all buddies. A user can manage the
    entries in their buddy list using the provisioning mechanisms in <xref
    target="sec-prov"/>, below. 
    </t>
  </list>

</t>
