<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
{{ entityrefs }}
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="{{ wanttoc|default:"no" }}"?>
<?rfc tocdepth="{{ tocdepth|default:"3" }}"?>
<?rfc symrefs="{{ symrefs|default:"yes" }}"?>
<?rfc sortrefs="{{ sortrefs|default:"yes" }}" ?>
<?rfc compact="{{ compact|default:"yes" }}" ?>
<?rfc subcompact="{{ subcompact|default:"no" }}" ?>
<rfc category="info" docName="{{ name }}" ipr="trust200902">
  <front>
    <title>{{ title }}</title>
    {% for author in authors %}
    <author fullname="{{ author.fullname }}" initials="{{ author.initials }}" surname="{{ author.surname }}">
      <organization>{{ author.organization }}</organization>
      <address>
	{% if author.street or author.city or author.region or author.code or author.country %}
        <postal>
          <street>{{ author.street }}</street>
          <city>{{ author.city }}</city>
          <region>{{ author.region }}</region>
          <code>{{ author.code }}</code>
          <country>{{ author.country }}</country>
        </postal>
	{% endif %}
        <phone>{{ author.phone }}</phone>
        <email>{{ author.email }}</email>
      </address>
    </author>
    {% endfor %}

    <date month="{{ date.month }}" year="{{ date.year }}" />

    <area>{{ area }}</area>

    <workgroup>{{ group|default:"Internet Engineering Task Force" }}</workgroup>
    <keyword>{{ keywords }}</keyword>
    <abstract>
      <t>{{ abstract }}</t>
    </abstract>
  </front>

  <middle>
    {% for section in sections %}
    <section title="{{ section.title }}">
       {% for item in section %}
    </section>

    <section anchor="simple_list" title="Simple List">
      <t>List styles: 'empty', 'symbols', 'letters', 'numbers', 'hanging',
      'format'.</t>

      <t><list style="symbols">
          <t>First bullet</t>

          <t>Second bullet</t>
        </list> You can write text here as well.</t>
    </section>

    <section title="Figures">
      <t>Figures should not exceed 69 characters wide to allow for the indent
      of sections.</t>

      <figure align="center" anchor="xml_happy">
        <preamble>Preamble text - can be omitted or empty.</preamble>

        <artwork align="left"><![CDATA[
+-----------------------+
| Use XML, be Happy :-) |
|_______________________|
            ]]></artwork>

        <postamble>Cross-references allowed in pre- and postamble. <xref
        target="min_ref" />.</postamble>
      </figure>

      <t>The CDATA means you don't need to escape meta-characters (especially
      &lt;&nbsp;(&amp;lt;) and &amp;&nbsp;(&amp;amp;)) but is not essential.
      Figures may also have a title attribute but it won't be displayed unless
      there is also an anchor. White space, both horizontal and vertical, is
      significant in figures even if you don't use CDATA.</t>
    </section>

    <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->

    <?rfc needLines="8" ?>

    <section title="Subsections and Tables">
      <section title="A Subsection">
        <t>By default 3 levels of nesting show in table of contents but that
        can be adjusted with the value of the "tocdepth" processing
        instruction.</t>
      </section>

      <section title="Tables">
        <t>.. are very similar to figures:</t>

        <texttable anchor="table_example" title="A Very Simple Table">
          <preamble>Tables use ttcol to define column headers and widths.
          Every cell then has a "c" element for its content.</preamble>

          <ttcol align="center">ttcol #1</ttcol>

          <ttcol align="center">ttcol #2</ttcol>

          <c>c #1</c>

          <c>c #2</c>

          <c>c #3</c>

          <c>c #4</c>

          <c>c #5</c>

          <c>c #6</c>

          <postamble>which is a very simple example.</postamble>
        </texttable>
      </section>
    </section>

    <section anchor="nested_lists" title="More about Lists">
      <t>Lists with 'hanging labels': the list item is indented the amount of
      the hangIndent: <list hangIndent="8" style="hanging">
          <t hangText="short">With a label shorter than the hangIndent.</t>

          <t hangText="fantastically long label">With a label longer than the
          hangIndent.</t>

          <t hangText="vspace_trick"><vspace blankLines="0" />Forces the new
          item to start on a new line.</t>
        </list></t>

      <!-- It would be nice to see the next piece (12 lines) all on one page. -->

      <?rfc needLines="12" ?>

      <t>Simulating more than one paragraph in a list item using
      &lt;vspace&gt;: <list style="letters">
          <t>First, a short item.</t>

          <t>Second, a longer list item.<vspace blankLines="1" /> And
          something that looks like a separate pararaph..</t>
        </list></t>

      <t>Simple indented paragraph using the "empty" style: <list
          hangIndent="10" style="empty">
          <t>The quick, brown fox jumped over the lazy dog and lived to fool
          many another hunter in the great wood in the west.</t>
        </list></t>

      <section title="Numbering Lists across Lists and Sections">
        <t>Numbering items continuously although they are in separate
        &lt;list&gt; elements, maybe in separate sections using the "format"
        style and a "counter" variable.</t>

        <t>First list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#1</t>

            <t>#2</t>

            <t>#3</t>
          </list> Specify the indent explicitly so that all the items line up
        nicely.</t>

        <t>Second list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#4</t>

            <t>#5</t>

            <t>#6</t>
          </list></t>
      </section>

      <section title="Where the List Numbering Continues">
        <t>List continues here.</t>

        <t>Third list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#7</t>

            <t>#8</t>

            <t>#9</t>

            <t>#10</t>
          </list> The end of the list.</t>
      </section>
      <section title="nested lists">
	<t>Simulating more than one paragraph in a list item using
	  &lt;vspace&gt;: 
	  <list style="letters">
	    <t>First, a short item.</t>

	    <t>Second, a longer list item.<vspace blankLines="1" /> And
	      something that looks like a separate paragraph.</t>

	    <t>and a sublist, also with letters
	      <list>
		<t>first subitem</t>
		<t>second subitem</t>
		<t>and a sub-sublist, also with letters
		  <list>
		    <t>first sub-subitem</t>
		    <t>second sub-subitem</t>
		  </list>
		</t>
	      </list>
	    </t>
	  </list>
	</t>
      </section>
      <section title="List Formats">
	<t>many formats
	  <list style="format %c">
	    <t>first %c-item</t>
	    <t>more %c-items</t>
	  </list>
	  <list style="format %C">
	    <t>first %C-item</t>
	    <t>more %C-items</t>
	  </list>
	  <list style="format %d">
	    <t>first %d-item.</t>
	    <t>more %d-items.</t>
	  </list>
	  <list style="format %i">
	    <t>first %i-item</t>
	    <t>more %i-items</t>
	    <t>more %i-items</t>
	    <t>more %i-items</t>
	    <t>more %i-items</t>
	    <t>more %i-items</t>
	    <t>more %i-items</t>
	    <t>more %i-items</t>
	    <t>more %i-items</t>
	  </list>
	  <list style="format %I">
	    <t>first %I-item</t>
	    <t>more %I-items</t>
	    <t>more %I-items</t>
	    <t>more %I-items</t>
	    <t>more %I-items</t>
	    <t>more %I-items</t>
	    <t>more %I-items</t>
	    <t>more %I-items</t>
	    <t>more %I-items</t>
	  </list>
	  <list style="format %o">
	    <t>first %o-item</t>
	    <t>more %o-items</t>
	    <t>more %o-items</t>
	    <t>more %o-items</t>
	    <t>more %o-items</t>
	    <t>more %o-items</t>
	    <t>more %o-items</t>
	    <t>more %o-items</t>
	    <t>more %o-items</t>
	  </list>
	  <list style="format %x">
	    <t>first %x-item</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	    <t>more %x-items</t>
	  </list>
	  <list style="format %X">
	    <t>first %X-item</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	    <t>more %X-items</t>
	  </list>
	</t>
      </section>
    </section>

    <section anchor="codeExample"
             title="Example of Code or MIB Module To Be Extracted">
      <figure>
        <preamble>The &lt;artwork&gt; element has a number of extra attributes
        that can be used to substitute a more aesthetically pleasing rendition
        into HTML output while continuing to use the ASCII art version in the
        text and nroff outputs (see the xml2rfc README for details). It also
        has a "type" attribute. This is currently ignored except in the case
        'type="abnf"'. In this case the "artwork" is expected to contain a
        piece of valid Augmented Backus-Naur Format (ABNF) grammar. This will
        be syntax checked by xml2rfc and any errors will cause a fatal error
        if the "strict" processing instruction is set to "yes". The ABNF will
        also be colorized in HTML output to highlight the syntactic
        components. Checking of additional "types" may be provided in future
        versions of xml2rfc.</preamble>

        <artwork><![CDATA[

/**** an example C program */

#include <stdio.h>

void
main(int argc, char *argv[])
{
    int i;

    printf("program arguments are:\n");
    for (i = 0; i < argc; i++) {
        printf("%d: \"%s\"\n", i, argv[i]);
    }

    exit(0);
} /* main */

/* end of file */

            ]]></artwork>
      </figure>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>This template was derived from an initial version written by Pekka
      Savola and contributed by him to the xml2rfc project.</t>

      <t>
	This document is part of a plan to make xml2rfc indispensable <xref
	target="DOMINATION"></xref>.
	This document may be shared as needed <xref
	target="SHARING"></xref>.
      </t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>

      <t>All drafts are required to have an IANA considerations section (see
      <xref target="I-D.narten-iana-considerations-rfc2434bis">the update of
      RFC 2434</xref> for a guide). If the draft does not require IANA to do
      anything, the section contains an explicit statement that this is the
      case (as above). If there are no requirements for IANA, the section will
      be removed during conversion into an RFC by the RFC Editor.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>All drafts are required to have a security considerations section.
      See <xref target="RFC3552">RFC 3552</xref> for a guide.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;

      <reference anchor="min_ref">
        <!-- the following is the minimum to make xml2rfc happy -->

        <front>
          <title>Minimal Reference</title>

          <author initials="authInitials" surname="authSurName">
            <organization></organization>
          </author>

          <date year="2006" />
        </front>
      </reference>
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->

      <?rfc include="reference.RFC.2629" ?>

      &RFC3552;

      &I-D.narten-iana-considerations-rfc2434bis;

      <!-- A reference written by by an organization not a person. -->

      <reference anchor="DOMINATION"
                 target="http://www.example.com/dominator.html">
        <front>
          <title>Ultimate Plan for Taking Over the World</title>

          <author>
            <organization>Mad Dominators, Inc.</organization>
          </author>

          <date year="1984" />
        </front>
      </reference>
      <reference anchor="SHARING"
                 target="http://www.example.com/sharing.html">
        <front>
          <title>
		I Learned to Share in Kindergarten
	  </title>

          <author>
            <organization>
		Sesame Street
	    </organization>
          </author>

          <date year="1972" />
        </front>
      </reference>
    </references>

    <section anchor="app-additional" title="Additional Stuff">
      <t>This becomes an Appendix.</t>
    </section>

    <section anchor="contributors" title="Contributors" numbered="no">
      <t>This becomes an unnumbered section</t>
    </section>

    <!-- Change Log

v00 2006-03-15  EBD   Initial version

v01 2006-04-03  EBD   Moved PI location back to position 1 -
                      v3.1 of XMLmind is better with them at this location.
v02 2007-03-07  AH    removed extraneous nested_list attribute,
                      other minor corrections
v03 2007-03-09  EBD   Added comments on null IANA sections and fixed heading capitalization.
                      Modified comments around figure to reflect non-implementation of
                      figure indent control.  Put in reference using anchor="DOMINATION".
                      Fixed up the date specification comments to reflect current truth.
v04 2007-03-09 AH     Major changes: shortened discussion of PIs,
                      added discussion of rfc include.
v05 2007-03-10 EBD    Added preamble to C program example to tell about ABNF and alternative 
                      images. Removed meta-characters from comments (causes problems).  -->
  </back>
</rfc>
